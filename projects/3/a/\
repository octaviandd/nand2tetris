// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
/ File name: projects/3/a/PC.hdl
/**
 * A 16-bit counter.
 * if      reset(t): out(t+1) = 0
 * else if load(t):  out(t+1) = in(t)
 * else if inc(t):   out(t+1) = out(t) + 1
 * else              out(t+1) = out(t)
 */
CHIP PC {
    IN in[16],inc, load, reset;
    OUT out[16];
    
    PARTS:
    //// Replace this comment with your code.
    // Current Register Incremented Value 
    Inc16(in=currentValue, out=currentValuePlusOne);
   

    // if and elses
    Mux16(a=currentValuePlusOneRegister, b=resetRegister, sel=reset, out=firstOut);  
    Mux16(a=firstOut, b=loadRegister, sel=delayedOut, out=secondOut);   
    Mux16(a=defaultRegister, b=secondOut, sel=inc, out=currentValue);
    Mux16(a=currentValue, b=resetRegister, sel=reset, out=out[0..15]);

    Register(a=load, load=load, out=delayedOut); 

    // Registers for t + 1
    Register(in=in[0..15], load=load, out=loadRegister);
    Register(in=currentValuePlusOne, load=inc, out=currentValuePlusOneRegister);   
    Register(in=false, load=reset, out=resetRegister);
    Register(in=in[0..15], load=true, out=defaultRegister);
}
